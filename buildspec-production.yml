version: 0.2

env:
  secrets-manager:
    TWINE_USERNAME: "PyPi/testAccount:username"
    TWINE_PASSWORD: "PyPi/testAccount:password"

phases:
  install:
    commands:  # Install AWS cli, kubectl (needed for Helm) and Helm
      - apt-get update
      - apt install -y awscli git python3
      - curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/aws-iam-authenticator
      - chmod +x ./aws-iam-authenticator
      - mkdir -p ~/bin && cp ./aws-iam-authenticator ~/bin/aws-iam-authenticator && export PATH=~/bin:$PATH
  pre_build:
    commands:
      - AWS_ACCOUNT_ID=705303224111
      - AWS_DEFAULT_REGION=eu-west-1
      - IMAGE_REPO_NAME=typegenie/typegenie-api-client
      - ENV=production
      - aws --version
      - ECR_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_URI
      - REPOSITORY_URI=$ECR_URI/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest -f Production.Dockerfile .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$COMMIT_HASH
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Will start running tests...
      - docker run $REPOSITORY_URI:$IMAGE_TAG python tests.py
      # How to make sure this only runs if tests pass?
      - echo Tests successfully passed, will deploy to pip
      - rm -rf dist && mkdir -p dist
      - docker run -v dist:dist $REPOSITORY_URI:$IMAGE_TAG python setup.py sdist bdist_wheel
      - docker run -v dist:dist $REPOSITORY_URI:$IMAGE_TAG twine upload dist/* --repository testpypi --username $TWINE_USERNAME --password $TWINE_PASSWORD



